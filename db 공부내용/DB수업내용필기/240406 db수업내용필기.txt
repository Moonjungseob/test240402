
create table dept6
as select * from dept2
where dcode in (1000,1001,1002);


select * from dept6;

alter table dept6
add(location VARCHAR2(200));

update dept6
set location='부산'
where dcode=1000;

insert into dept6 
values (2000,'TEAM',null, 'BUSAN', '부산');

alter table dept6
drop column pdept;

--decoder가 2000번 삭제
delete from dept6
where dcode = 2000;

insert all 
when dcode = 1000
then into dept6 values (dcode, dname, area)
select dcode, dname, area from dept2
where dcode = 1000;
 
 drop table dept6;

create table professor6
as select * from professor
where 1<>1;

select * from professor6;

drop table professor6;

--트랜잭션(ACID)
--A 원자성 (Aomicity)
--C 일간성 (Conisistency) : 일관적으로 DB 상태 유지
--I  격리성 (Isolation) : 트랜잭션 수행시 다른 트랜잭션의 작업이 끼어들지 못하도록 보장하는 것
--D 지속성 (Durability) : 성공적으로 수행된 트랜잭션은 영원히 반영이 되는 것

--13장 p327
--데이터 사전
-- user__   / all___   /DBA__ (오라클 데이터)
--인덱스
--View(뷰) 가상의 테이블 (편의성, 보안성때문)
select * from dictionary;
---스캇 계정이 가지고 있는 모든 테이블
select table_name from user_tables;
--스캇 계정이 가지고 있는 모든 객체 정보 조회
select owner, table_name from all_tables;

--p341
--View(뷰) 가상의 테이블 (편의성, 보안성때문)
create view vw_emp20
as (select empno, ename, job, deptno 
     from emp
     where deptno > 20
     );

select * from vw_emp20;
select * from user_views;

create or replace view vw_emp20
as select empno, ename, job, deptno 
     from emp
     where deptno > 20     ;
     
     create or replace view v_emp1
     as select * from emp;

select * from v_emp1;
--v_emp1 (3000, '홍길동', sysdate) 추가
insert into v_emp1(empno, ename, hiredate)
values (3000, '홍길동', sysdate);

commit;

create or replace view v_emp1
as 
select empno, ename, hiredate
from emp
with read only; --읽기만

insert into v_emp1(empno, ename, hiredate)
values (3000, '홍길동', sysdate); --오류발생(읽기전용이라서)

--부서별 최대 급여를 받는 사람의 부서번호, 부서명, 급여 출력
select * from emp;

select  e.deptno, sal, dname
from emp e, dept d
where (e.deptno, e.sal) in (select deptno, max(sal) from emp group by deptno)
and e.deptno=d.deptno; 

select deptno, max(sal) from emp group by deptno;

--인라인뷰(비용적게듬)
select e.deptno, d.dname, e.sal
from (select deptno, max(sal) sal from emp group by deptno) e, dept d
where e.deptno=d.deptno;

--p346


-- 위에서 3개만 출력
select * from(
select * from emp
order by ename desc)
where rownum <=3;

select rownum rn, e.*
from (
         select * from emp
         order by ename desc) e
where rownum <=3;

--with 사용
with e as (select * from emp
               order by ename desc)
select rownum, e.*
from e
where rownum <=3;

--p340 시퀀스
create table dept_sequence
as select *
from dept
where 1<>1;

select * from dept_sequence;
--시퀀스 생성
create sequence seq_dept_sequence
increment by 10
start with 10
maxvalue 90
MINVALUE 0
nocycle
nocache ;

select * from dept_sequence;
insert into dept_sequence (dname, loc)
values ('DATABASE', 'SEOUL');

insert into dept_sequence (deptno, dname, loc)
values (seq_dept_sequence.nextval,'DATABASE', 'SEOUL');
commit;


insert into dept_sequence (deptno, dname, loc)
values (seq_dept_sequence.nextval,'DATABASE1', 'SEOUL1');
insert into dept_sequence (deptno, dname, loc)
values (seq_dept_sequence.nextval,'DATABASE2', 'SEOUL2');
insert into dept_sequence (deptno, dname, loc)
values (seq_dept_sequence.nextval,'DATABASE3', 'SEOUL3');
insert into dept_sequence (deptno, dname, loc)
values (seq_dept_sequence.nextval,'DATABASE4', 'SEOUL4');
insert into dept_sequence (deptno, dname, loc)
values (seq_dept_sequence.nextval,'DATABASE5', 'SEOUL5');

select seq_dept_sequence.currval --현재시퀀스 조회
from dual;

--시퀀스 삭제
drop sequence seq_dept_sequence;
drop table dept_sequence;

create sequence emp_seq
increment by 1
start with 1
MINVALUE 1
nocycle
nocache ;

select emp_seq.currval
from dual;
select emp_seq.nextval from dual;

alter sequence emp_seq
increment by 20
cycle;

drop sequence emp_seq;

--제약조건 p 360 ==> 데이터무결성
--not null null들어가면 안됨
--unique 고유해야함
--primary key(기본키) - not null / unique
--foreign key)(외래키) 다른 테이블 참조
--check  범위 제약조건

create table table_notnull(
   login_id varchar2(20) not null,
   login_pwd varchar2(20) not null,
   tel varchar2(20)
   );
   
insert into table_notnull(login_id, login_pwd, tel) values('aa', '1111', '010-1111-2222');
insert into table_notnull(login_id, login_pwd, tel) values('bb', '1111', '010-1111-2222');
insert into table_notnull(login_id, login_pwd ) values('bb', '1111');
insert into table_notnull( login_pwd, tel) values('1111', '010-1111-2222');

commit;
select * from table_notnull2;

create table table_notnull2(
   login_id varchar2(20) CONSTRAINT tbl_nn2_loginID not null ,
   login_pwd varchar2(20) CONSTRAINT tbl_nn2_loginPWD not null ,
   tel varchar2(20)
   );

insert into table_notnull2 values('aa', '1111', '010-1111-2222');
insert into table_notnull2 values('aa', '1111', '010-1111-2222');
alter table table_notnull2 
modify (tel CONSTRAINT tbl_nn2_tel not null);
--오류발생 (tel이 not null임)
insert into table_notnull2(login_id, login_pwd ) values('bb', '1111'); 

--table_notnull2에서 login_id에 unique 제약조건 부여
alter table table_notnull2 
modify (login_id CONSTRAINT tbl_nn2_unique_loginID unique);
--오류발생 (무결성 제약 조건 unique조건에 위배)
insert into table_notnull2 values('aa', '1111', '010-1111-2222');
insert into table_notnull2 values('aa', '1111', '010-1111-2222');

--제약조건 삭제
alter table table_notnull2
drop CONSTRAINT tbl_nn2_tel;

create table table_unique(
   login_id varchar2(20) CONSTRAINT tbl_unique_loginID unique,
   login_pwd varchar2(20) not null,
   tel varchar2(20)
   );
insert into table_unique values('aa', '1111', '010-1111-2222');
--오류발생 (무결성 제약 조건 unique조건에 위배)
insert into table_unique values('aa', '1111', '010-1111-2222');

insert into table_unique values(null, '1111', '010-1131-2222');
insert into table_unique values(null, '3333', '010-1111-4444');

select * from table_unique;




--제약 조건 조회
select owner, constraint_name
from user_constraints;

drop table table_notnull;

create table table_pk(
   login_id varchar2(20) primary key,
   login_pwd varchar2(20) not null,
   tel varchar2(20)
   );
--오류발생 login_id 기본키이므로 반드시 not null, unique 해야 함
 insert into table_pk(login_pwd, tel) values('1111','010-1111-2222');
 
 create table table_pk2(
   login_id varchar2(20) CONSTRAINT table_pk2_id primary key,
   login_pwd varchar2(20) not null,
   tel varchar2(20)
   );
 
 
 --board (num title, writher, content, regdate)
 -- number,    date(기본값 : sysdate)
 -- num: 기본키
 --시퀀스 : board_deq
 
 create table board( 
 num number(20) primary key, 
 title VARCHAR2(20), 
 writer VARCHAR2(20), 
 content VARCHAR2(20), 
 regdate date default sysdate);
 
 create sequence board_seq
increment by 1
start with 1
MINVALUE 1
nocycle
nocache ;

 insert all
 into board values (1, 'board1', '홍길동', '1번 게시글', sysdate)
 into board values (board_seq.nextval, 'board2', '강감찬', '2번 게시글', sysdate)
 select * from dual;
 
 select * from board;
 
 alter table board
 rename column writer to name;
 
 insert into board values (board_seq.nextval, 'board3', '홍길동3', '3번 게시글', sysdate);
 insert into board values (board_seq.nextval, 'board4', '홍길동4', '4번 게시글', sysdate);
 insert into board values (board_seq.nextval, 'board5', '홍길동5', '5번 게시글', sysdate);
 insert into board values (board_seq.nextval, 'board6', '홍길동6', '6번 게시글', sysdate);
 
 
--board num 내림차순으로 해서 위에서 3개만 출력
select rownum,  b.* 
from(
select * from board 
order by num desc
) b
where rownum <=3;


with e as (select * from board 
order by num desc) 
select rownum, e.* 
from e
where  rownum <=3;
----
create table table_name(
col1 varchar2(20) CONSTRAINT table_name_pk_col1 primary key,
col2 varchar2(20) not null,
col3 varchar2(20)
);

create table table_name2(
col1 varchar2(20) ,
col2 varchar2(20) not null,
col3 varchar2(20),
 primary key(col1)
);

create table table_name3(
col1 varchar2(20) ,
col2 varchar2(20) not null,
col3 varchar2(20),
 CONSTRAINT table_name3_pk_col1 primary key(col1)
);

--dept_fk(부서번호, 부서명, 지역)
create table dept_fk(
deptno number(2) CONSTRAINT deptfk_deptno_pk primary key,
dname VARCHAR2(20),
loc varchar2(20)
);

--emp_fk(사원번호, 사원명, 직책, 부서번호)
create table emp_fk(
empno number(2) CONSTRAINT empfk_empno_pk primary key,
ename varchar2(20),
job VARCHAR2(20),
deptno number(2)
);

select * from dept_fk;
select * from emp_fk;

insert all 
into dept_fk values(10, '영업', '부산')
into dept_fk values(20, 'IT', '서울')
select * from dual;

insert into emp_fk values(1, '홍길동', '사원', 30);

create table emp_fk(
empno number(2) CONSTRAINT empfk_empno_pk primary key,
ename varchar2(20),
job VARCHAR2(20),
deptno number(2) CONSTRAINT empfk_deptno_fk
REFERENCES dept_fk(deptno)
);
--오류발생 dept_fk 테이블에 30번 부서가 없는데 30번 부서 추가하려고해서 오류 
--(외래키 : 다른 테이블에서 참조., 칼럼의 값 형식이 동일해야 함, null값은 넣을 수 있음)
insert into emp_fk values(1, '홍길동', '사원', 30);
insert into emp_fk values(1, '홍길동', '사원', 20);
insert into emp_fk (empno, ename, job)values(2, '강감찬', '팀장' );

delete from emp_fk where empno=1;
commit;
--오류발생 (emp_fk에서 deptno 항목을 참조하고 있으므로 삭제가 불가)
delete from dept_fk where deptno=20;

--오류발생 (detpno=30 이 없으므로 30번부서 업데이트 불가)
update emp_fk set deptno =30  where empno =1;
--외래키 제약조건을 삭제
alter table emp_fk
drop constraint empfk_deptno_fk;
--외래키 삭제로 insert 가능
insert into emp_fk values(3, '강감찬', '팀장', 40);
commit;
--삭제한 외래키 추가
alter table emp_fk
add constraint empfk_deptno_fk foreign key(deptno)
REFERENCES dept_fk(deptno)
on delete cascade; -- 부모가 지워지면 연관된 자식도 지워짐 (둘다 지워짐) set null 하면 부모가 지워질때 자식이 null값이 됨
delete from dept_fk where deptno=20;

create table table_check(
             login_id varchar2(20) constraint tb_check_id_pk primary key,
             login_pwd varchar2(20) constraint tb_check_ch check(length(login_pwd) >3),
             tel varchar2(20)
);
--오류발생 (체크 제약조건 : 비밀번호가 3자리 이상이어야함)
insert into table_check values('aaa', '123', '010');
--오류없음
insert into table_check values('aaa', '12345', '010');
commit;
select * from  table_check;

--board(num, title, userid, contentm regdate) : 기본키 num
--comment (cnum, userid, msg, regdate, bnum) : 기본키 cnum 외래키 (bum)
--member(userid, username, tel) 기본키 userid

--시퀀스 board_seq / coment_seq
alter table comments
drop constraint cmt_uid_fk;

create table board(
      num number(5) constraint bo_num_pk  primary key, 
      title VARCHAR2(20), 
      userid VARCHAR2(10),
      content VARCHAR2(200),
      regdate date default sysdate
      );
alter table board
add constraint bo_uid_fk foreign key(userid)
REFERENCES member(userid);


create table comments(
      cnum number(5) constraint cmt_cnum_pk primary key, 
      userid VARCHAR2(10),
      msg VARCHAR2(20),
      regdate date default sysdate,
      bnum number(5) constraint cmt_bnum_fk 
      REFERENCES board(num)
      );
      
 alter table comments
add constraint cmt_uid_fk foreign key(userid)
REFERENCES member(userid);

create table member(
      userid VARCHAR2(10) constraint mb_userid_pk  primary key, 
      username VARCHAR2(20), 
      tel VARCHAR2(20)
      );      
      
create sequence board_seq
increment by 1
start with 1
MINVALUE 1
nocycle
nocache ;

create sequence comments_seq
increment by 1
start with 1
MINVALUE 1
nocycle
nocache ;

--제약조건(단, 테이블 명은 대문자로)
select * from USER_CONSTRAINTS
where table_name = 'BOARD';
--제약조건 삭제
alter table board
drop constraint BO_UID_FK;