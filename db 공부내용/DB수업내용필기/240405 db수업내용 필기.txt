--p266
--DML : 데이터를 추가나 수정, 삭제하는 데이터 조작어
--DDL : 객체를 생성, 변경, 삭제하는 데이터 정의어 p311

--test1 (no, name, adress, tel)
--------number(5), 문자열(20), 문자열(50), 문자열(20)
create table test1(
         no number(5),
         name varchar2(20),
         adress varchar2(50),
         tel varchar2(20)
         );
         
select * from test1;
--1(1, 'aaa')추가 (no, name)
insert into test1(no, name) values(1, 'aaa');
--(2, 'bbb', '부산', '010-1111-2222') 추가
insert into test1(no, name, adress, tel) values(2, 'bbb', '부산', '010-1111-2222');
--(3, 'ccc', '부산', '010-1111-2222') 추가 모든 컬럼 시 컬럼명 생략가능
insert into test1(no, name, adress, tel) values(3, 'ccc', '부산', '010-1111-2222');

insert into test1(no, name, adress ) values(4, 'ddd',  '서울');

commit;
--수정
-- no2가 2번인 사람의 이름을 홍길동으로 수정
update test1 
set name ='홍길동'
where no=2;
-- no가 4인 name을 test / adress 서울로 수정
update test1
set name='test', adress='서울'
where no=4;

--삭제
--test1 에서 1번 삭제
delete test1
where no=1;

delete from test1 where no=2;
commit;
delete from test1; --모든 데이터 삭제


create table test(
no number(3) default 0, 
name varchar2(20) default 'NONAME',
hiredate DATE default sysdate
);

select * from test;
insert into test(no, name) values(1, '홍길동');
insert into test(hiredate) values('24/03/30');

--test에서 번호가 1번인 사람의 이름을 강감찬으로 수정
update test
set name ='강감찬'
where no=1;
commit;

--test에서 번호가  0인것을 삭제하고 
--번호가 2인 데이터를 추가하기
delete test
where no=0;
insert into test(no) values (2);
--CRUD (create, select, update, delete)
--p266 (CTAS : create table as select) 기존 테이블을 통해 테이블을 만드는것
create table dept_temp
as select * from dept;
select * from dept_temp;
---dept_temp 테이블에 50, database, seoul 추가
insert into dept_temp values(50, 'DATABASE', 'SEOUL');
commit;

--테이블 구조만 복사
create table emp_temp
as select * from emp
where 1<>1; --말도안되는 조건을 걸어서 검색못하게 함

select * from emp_temp;
--emp_temp 2111, '이순신', 'MANAGER', 9999, '07/01/2019',4000,NULL,20)
insert into emp_temp
values (2111, '이순신', 'MANAGER', 9999, to_date('07/01/2019','DD/MM/YYYY'),4000,NULL,20);
--(3111, '강감찬', 'MANAGER', 999, 4000, NULL, 20) 입사일은 오늘날짜로 추가
insert into emp_temp
values (3111, '강감찬', 'MANAGER', 9999, sysdate, 4000, NULL, 20);

--사원번호가 3111인 사원의 급여를 5000으로 수정
update emp_temp
set sal=5000
where empno=3111;
delete from emp_temp;
commit;

--p275 서브쿼리 사용 시 values 사용 안해도 됨
--급여 등급(salgrade)이 1인 사원만 emp_temp에 추가
insert into emp_temp(empno, ename, job, mgr, hiredate, sal, comm, deptno)
select e.empno, e.ename, e.job, e.mgr, e.hiredate, e.sal, e.comm, e.deptno from emp e, salgrade s
where e.sal between s.losal and s.hisal and s.grade=1;
commit;

--dept 테이블을 복사해서 dept_temp2 테이블을 만들고 
--40번 부서명을 DATABASE 지역을 서울로 수정
create table dept_temp2
as select * from dept;
select * from dept_temp2;
update dept_temp2
set dname='DATABASE', loc='SEOUL'
where deptno=40;
commit;
--7900번 이름을 강감찬으로 수정
select * from emp_temp;
update emp_temp
set ename='강감찬'
where empno=7900;
rollback;

--dept_tem2 테이블에서 40번 내용을 수정
--dept 테이블의 40번이 가지는 부서명과 지역으로 수정
select * from dept_temp2;
update dept_temp2
set dname=(select dname from dept where deptno=40), loc=(select loc from dept where deptno=40)
where deptno=40;
rollback;

update dept_temp2
set (dname,  loc) = (select dname, loc from dept where deptno=40)
where deptno=40;
commit;
--dept_temp2 모든 데이터 삭제
delete from dept_temp2;
drop table dept_temp2;

create table dept_tmp
as select * from dept;
select * from dept_tmp;
--dept_tmp 테이블에 LOCATION 컬럼 추가
alter table dept_tmp
add(LOCATION varchar2(50)); 
--10번인 부서의 location을 뉴욕으로 수정
update dept_tmp
set location='뉴욕'
where deptno=10;
--컬럼 구조 수정
alter table dept_tmp
modify (LOCATION varchar2(70));
commit;
--구조확인
describe dept_tmp;
desc dept_tmp;
--컬럼 삭제
alter table dept_tmp
drop column location;
--컬럼명 loc를 LOCATION으로 수정
alter table dept_tmp
rename COLUMN loc to LOCATION;

--테이블 명 수정
rename dept_tmp to dept_tmptmp;
select * from dept_tmptmp;

--모든 데이터 삭제 
delete from dept_tmptmp;
--rollback 하면 삭제된 모든 데이터 복구

--모든 데이터 삭제 (ddl이므로 롤백이 적용되지않고 모든 데이터 삭제 복구안됨)
truncate table dept_tmptmp;
--테이블 삭제 (데이터 구조 모두 삭제)
drop table dept_tmptmp;

--1
select job, empno, ename, sal, deptno, dname
from emp NATURAL join dept
where job=(select job from emp where ename='ALLEN')
order by sal desc;

--2
select e.empno, e.ename, d.dname, to_char(e.hiredate,'YYYY-MM-DD') as HIREDATE, d.loc, e.sal, s.grade
from emp e, dept d, salgrade s
where e.deptno=d.deptno and e.sal between s.losal and s.hisal
and sal >(select avg(sal) from emp)
order by sal desc, empno asc;

--3
select empno, ename, job, deptno, dname, loc
from emp natural join dept
where deptno=10
and job not in (select job from emp where deptno=30);

--4 
select empno, ename, sal, grade
from emp, salgrade
where sal BETWEEN losal and hisal
and sal>(select max(sal) from emp where job='SALESMAN')
order by empno;

select empno, ename, sal, grade
from emp, salgrade
where sal BETWEEN losal and hisal
and sal>all(select sal from emp where job='SALESMAN')
order by empno;


--10-1
create table CHAP10HW_EMP as select * from emp;
create table CHAP10HW_DEPT as select * from dept;
create table CHAP10HW_salgrade as select * from salgrade;

select * from CHAP10HW_DEPT;
select * from CHAP10HW_EMP
order by deptno;


insert into CHAP10HW_DEPT (deptno, dname, loc)
values (50, 'ORACLE', 'BUSAN' );
insert into CHAP10HW_DEPT (deptno, dname, loc)
values (60, 'SQL', 'ILSAN' );
insert into CHAP10HW_DEPT (deptno, dname, loc)
values (70, 'SELECT', 'INCHEON' );
insert into CHAP10HW_DEPT (deptno, dname, loc)
values (80, 'DML', 'BUNDANG' );

insert into CHAP10HW_EMP 
values (7201, 'TEST_USER1', 'MANAGER', 7788, to_date('02/01/2016','DD/MM/YYYY'), 4500, null, 50);
insert into CHAP10HW_EMP 
values (7202, 'TEST_USER2', 'CLERK', 7201, to_date('21/02/2016','DD/MM/YYYY'), 1800, null, 50);
insert into CHAP10HW_EMP 
values (7203, 'TEST_USER3', 'ANALYST', 7201, to_date('11/04/2016','DD/MM/YYYY'), 3400, null, 60);
insert into CHAP10HW_EMP 
values (7204, 'TEST_USER4', 'SALESMAN', 7201, to_date('31/05/2016','DD/MM/YYYY'), 2700, 300, 60);
insert into CHAP10HW_EMP 
values (7205, 'TEST_USER5', 'CLERK', 7201, to_date('20/07/2016','DD/MM/YYYY'), 2600, null, 70);
insert into CHAP10HW_EMP 
values (7206, 'TEST_USER6', 'CLERK', 7201, to_date('08/09/2016','DD/MM/YYYY'), 2600, null, 70);
insert into CHAP10HW_EMP 
values (7207, 'TEST_USER7', 'LECTURER', 7201, to_date('28/10/2016','DD/MM/YYYY'), 2300, null, 80);
insert into CHAP10HW_EMP 
values (7208, 'TEST_USER8', 'STUDENT', 7201, to_date('09/03/2018','DD/MM/YYYY'), 1200, null, 80);

--3
update CHAP10HW_EMP
set deptno=70
where sal>(select avg(sal) from CHAP10HW_EMP where deptno=50);

--4
update CHAP10HW_EMP
set sal=sal*1.1, deptno=80
where hiredate >(select min(hiredate) from CHAP10HW_EMP where deptno=60);
savepoint e1;

--5
delete CHAP10HW_EMP
where sal =any(select sal from CHAP10HW_EMP, CHAP10HW_salgrade where sal between losal and hisal and grade=5);
savepoint e2;
rollback e2;

--11장 트랜잭션
--트랜잭션 : 더 이상 분할 할 수 없는 최소 수행 단위로 한번에 수행하여 작업을 완료하거나 모두 수행하지 않거나(작업취소) 
--               ALL or Nothing (commit / rollback)
--               TCL 

--p298 읽기일관성
-- 격리수준
-- Oracle : Read Commited
-- MySQL : Repeatable Commited

--1
create table EMP_HW(
EMPNO number(4),
ENAME varchar2(10),
JOB varchar2(9),
MGR number(4),
HIREDATE DATE,
SAL number(7,2),
COMM number (7,2),
DEPTNO number(2)
);
select * from EMP_HW;
desc emp_hw;
--2
alter table EMP_HW
add BIGO varchar2(20);

--3
alter table EMP_HW
modify BIGO varchar2(30);

--4
alter table EMP_HW
rename column BIGO to REMARK; 

--5
insert all
into EMP_HW (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
select *
from emp;
commit;
savepoint e3;
drop table EMP_HW;

--employees
--1. 부서번호가 80보다 큰 부서의 사원 아이디, firstname, 매니저 아이디 출력
select * from employees
order by employee_id;

select employee_id, first_name, manager_id
from employees
where department_id >80;

--2. 부서번호가 80보다 큰 부서의 사원 아이디, firstname, 매니저 이름 출력
select e.employee_id, e.first_name, m.first_name as 매니저이름
from employees e, employees m
where e.manager_id=m.employee_id 
and e.department_id >80;
 
 --3. donald와 같은 연봉을 받는 사람의 아이디, 이름, 연봉
 select employee_id, first_name, salary
 from employees
 where salary=(select salary from employees where first_name='Donald');
 
 --4. Donald 입사일이 동일하거나 늦게 입사한 사람의 아이디, 급여 ,입사일 출력
 select employee_id, salary, hire_date, first_name
 from employees
 where hire_date >=(select hire_date from employees where first_name ='Donald')
 order by hire_date;
 
--5. 부서번호가 100인 부서의 평균급여보다 많은 급여를 받는 사원의 이름과 급여 출력
select first_name, salary
from employees
where salary >(select avg(nvl(salary,0)) from employees where department_id=100)
order by salary;

--1 sal_history(empid, hiredate,sal) 테이블을 만드는데 employees를 이용하여 구조만 생성
create table sal_history
as select employee_id as empid, hire_date as hiredate, salary as sal from employees
where 1<>1;


--2 mgr_history(empid,mgr,sal) 테이블을 만드는데 employees 이용하여 구조만 생성
create table mgr_history
as select employee_id as empid, manager_id as mgr, salary as sal from employees
where 1<>1;

select * from sal_history;
select * from mgr_history;


--3 employee_id 가 200보다 큰 데이터를 각각 sal_history 와 mgr_history에 데이터 넣기
--조건 없는 insert(unconditional insert) 
insert all 
into sal_history values(empid, hiredate, sal)
into mgr_history values(empid, mgr, sal)
select employee_id as empid, hire_date hiredate, salary sal, manager_id mgr
from employees
where employee_id>200;

insert into sal_history 
select employee_id empid, hire_date hiredate, salary sal
from employees
where employee_id>200;

--4 employee_id 가 200보다 큰 데이터 중에서 sal이 10000만보다 크면 sal_history
--mgr이 200보다 크면 mgr_history에 데이터 넣기
--조건 있는 insert(conditional insert)
insert all
when sal>10000 
then into sal_history values(empid, hiredate, sal)
when mgr>200
then into mgr_history values(empid, mgr, sal)
select employee_id empid, hire_date hiredate, salary sal, manager_id mgr
from employees 
where  employee_id>200;

insert all 
into CHAP10HW_DEPT (deptno, dname, loc)
select 50, 'ORACLE', 'BUSAN' from dual
union all
select 60, 'SQL', 'ILSAN' from dual
union all
select 70, 'SELECT', 'INCHEON' from dual
union all
select 80, 'DML', 'BUNDANG'  from dual;

insert all 
into CHAP10HW_EMP values (7201, 'TEST_USER1', 'MANAGER', 7788, to_date('02/01/2016','DD/MM/YYYY'), 4500, null, 50)
into CHAP10HW_EMP values (7202, 'TEST_USER2', 'CLERK', 7201, to_date('21/02/2016','DD/MM/YYYY'), 1800, null, 50)
into CHAP10HW_EMP values (7203, 'TEST_USER3', 'ANALYST', 7201, to_date('11/04/2016','DD/MM/YYYY'), 3400, null, 60)
into CHAP10HW_EMP values (7204, 'TEST_USER4', 'SALESMAN', 7201, to_date('31/05/2016','DD/MM/YYYY'), 2700, 300, 60)
into CHAP10HW_EMP values (7205, 'TEST_USER5', 'CLERK', 7201, to_date('20/07/2016','DD/MM/YYYY'), 2600, null, 70)
into CHAP10HW_EMP values (7206, 'TEST_USER6', 'CLERK', 7201, to_date('08/09/2016','DD/MM/YYYY'), 2600, null, 70)
into CHAP10HW_EMP values (7207, 'TEST_USER7', 'LECTURER', 7201, to_date('28/10/2016','DD/MM/YYYY'), 2300, null, 80)
into CHAP10HW_EMP values (7208, 'TEST_USER8', 'STUDENT', 7201, to_date('09/03/2018','DD/MM/YYYY'), 1200, null, 80)
select * from dual;
